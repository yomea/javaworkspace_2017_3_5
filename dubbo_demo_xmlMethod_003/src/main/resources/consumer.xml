<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	xsi:schemaLocation="http://www.springframework.org/schema/beans        http://www.springframework.org/schema/beans/spring-beans.xsd        http://code.alibabatech.com/schema/dubbo        http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

	 <!-- 消费方应用名，用于计算依赖关系，不是匹配条件，不要与提供方一样 -->
    <dubbo:application name="consumer-of-helloworld-app"  />
 
    <!-- 使用multicast广播注册中心暴露发现服务地址 -->
    <dubbo:registry address="multicast://224.5.6.7:1234" />
 	<!-- Spring容器是懒加载的，或者通过API编程延迟引用服务，请关闭check，否则服务临时不可用时，会抛出异常，拿到null引用，如果check=false，总是会返回引用，当服务恢复时，能自动连上 -->
    <!-- 生成远程服务代理，可以和本地bean一样使用demoService,check="false"关闭某个服务的启动检查，在没有提供者是会进行报错 -->
    <!-- init="true"饥饿初始化 -->
    <dubbo:reference id="service" interface="com.dubbo.service.UserService"  check="true" init="true"/>
    
    <!-- 关闭全部服务的启动检查，没有提供者是报错 -->
    <!-- <dubbo:consumer check="false"></dubbo:consumer> -->
    <!-- 延迟初始化 -->
    <bean id="userAction" class="com.dubbo.action.UserAction" lazy-init="true">
    	<property name="service" ref="service"></property>
    </bean>


</beans>